package com.ztesoft.zsmart.nros.crm.core.server.dao.dataobject.generator;

import com.ztesoft.zsmart.nros.common.model.BaseModel;
import java.io.Serializable;

/**
 * 定义各类型的事件
 * @author 浩鲸云计算科技股份有限公司
 * @date 2019-06-02
 */
public class EventDO extends BaseModel implements Serializable {
    /**
     * 定义各类型的事件-event_code
     */
    private String eventCode;

    /**
     * 定义各类型的事件-event_name
     */
    private String eventName;

    /**
     * 定义各类型的事件-事件描述
     */
    private String description;

    /**
     * 定义各类型的事件-事件实现类
     */
    private String eventClass;

    /**
     * This field was generated by MyBatis Generator.
     */
    private static final long serialVersionUID = 1L;

    /**
     * 获取：定义各类型的事件-event_code
     *
     * @return event_code
     */
    public String getEventCode() {
        return eventCode;
    }

    /**
     * 设置：定义各类型的事件-event_code
     *
     * @param eventCode
     */
    public void setEventCode(String eventCode) {
        this.eventCode = eventCode == null ? null : eventCode.trim();
    }

    /**
     * 获取：定义各类型的事件-event_name
     *
     * @return event_name
     */
    public String getEventName() {
        return eventName;
    }

    /**
     * 设置：定义各类型的事件-event_name
     *
     * @param eventName
     */
    public void setEventName(String eventName) {
        this.eventName = eventName == null ? null : eventName.trim();
    }

    /**
     * 获取：定义各类型的事件-事件描述
     *
     * @return 事件描述
     */
    public String getDescription() {
        return description;
    }

    /**
     * 设置：定义各类型的事件-事件描述
     *
     * @param description 定义各类型的事件-事件描述
     */
    public void setDescription(String description) {
        this.description = description == null ? null : description.trim();
    }

    /**
     * 获取：定义各类型的事件-事件实现类
     *
     * @return 事件实现类
     */
    public String getEventClass() {
        return eventClass;
    }

    /**
     * 设置：定义各类型的事件-事件实现类
     *
     * @param eventClass 定义各类型的事件-事件实现类
     */
    public void setEventClass(String eventClass) {
        this.eventClass = eventClass == null ? null : eventClass.trim();
    }
}